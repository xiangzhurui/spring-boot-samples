package com.xzr.test.person;

import java.util.List;
import java.math.BigDecimal;
import com.xiangzhurui.drools.domain.Person;
import com.xiangzhurui.drools.domain.RouterFact;
import org.slf4j.Logger;
import com.google.gson.*;
import java.util.*;

global List globalList;
global Logger log;

declare DefinePerson
 gender : Integer
 companyName : String
 annualIncome : BigDecimal
end

rule "test-persion"
when
    Person(age>100);
then
    log.info("globalList===={}",globalList);
    log.info("ruleName===={}",kcontext.getRule().getName());
 end

 rule "test-rout"

 lock-on-active true
 when
    RouterFact(routTag==1);
 then
 log.info("ruleName===={}",kcontext.getRule().getName());
  kcontext.getKieRuntime().getAgenda().getAgendaGroup("agenda-one").setFocus();
  end

   rule "test-rout1"

 lock-on-active true
 when
    RouterFact(routTag==2);
 then
 log.info("ruleName===={}",kcontext.getRule().getName());
// log.info("agendaGroup===={}",kcontext.getRule().getAgendaGroup());
  kcontext.getKieRuntime().getAgenda().getAgendaGroup("agenda-2").setFocus();
  end

  rule "test-one"
 agenda-group "agenda-one"
 lock-on-active true
 when
    Person(age>100);

 then
    log.info("ruleName===={}",kcontext.getRule().getName());

  end

  rule "test-2"
 agenda-group "agenda-2"
 lock-on-active true
 when
    Person(age>100);
 then
    log.info("ruleName===={}",kcontext.getRule().getName());

  end